[+]
build_type=Release
build_target=main
build_dir=build
build_generator=Ninja
run_environ=
run_target="$(VIM:build_dir)/$(VIM:build_target)"
build_options=--parallel
build_configs=
pre_build_cmd="C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" x64 && 

[project-build]
command=$(VIM:pre_build_cmd) cmake -G "$(VIM:build_generator)" -B "$(VIM:build_dir)" -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DCMAKE_BUILD_TYPE="$(VIM:build_type)" $(VIM:build_configs) && cmake --build "$(VIM:build_dir)" --target "$(VIM:build_target)" --config "$(VIM:build_type)" $(VIM:build_options)
output=quickfix
cwd=$(VIM_ROOT)
save=2

[project-run]
command=$(VIM:run_environ) $(VIM:run_target)
output=powershell
cwd=$(VIM_ROOT)
save=2

[project-config]
command=ccmake -B "$(VIM:build_dir)"
output=powershell
cwd=$(VIM_ROOT)
save=2

[project-clean]
command=rmdir /S /Q $(VIM:build_dir)
output=powershell
cwd=$(VIM_ROOT)
save=2

[file-build]
command=echo "building"
command:c,cpp=clang++ -O2 -Wall -fopenmp "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT).exe"
command:go=go build -o "$(VIM_PATHNOEXT).exe" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
output=quickfix
cwd=$(VIM_FILEDIR)
save=2

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp="$(VIM_PATHNOEXT).exe"
command:go="$(VIM_PATHNOEXT).exe"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=bash "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
output=powershell
cwd=$(VIM_FILEDIR)
save=2
